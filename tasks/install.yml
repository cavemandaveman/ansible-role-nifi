---
- name: Check if NiFi binary exists
  stat:
    path: "{{ nifi_config_dirs.binaries }}/nifi-{{ nifi_version }}-bin.tar.gz"
  register: tar_file

- name: Get NiFi binary checksum
  uri:
    url: https://archive.apache.org/dist/nifi/{{ nifi_version }}/nifi-{{ nifi_version }}-bin.tar.gz.sha256
    return_content: true
  register: sha256_sum
  when: not tar_file.stat.exists

- name: Download NiFi binary
  get_url:
    url: "{{ download_mirror_uri }}/nifi/{{ nifi_version }}/nifi-{{ nifi_version }}-bin.tar.gz"
    dest: "{{ nifi_config_dirs.binaries }}/nifi-{{ nifi_version }}-bin.tar.gz"
    checksum: "sha256:{{ sha256_sum }}"
  when: not tar_file.stat.exists

- name: Unpack NiFi binary
  unarchive:
    remote_src: "yes"
    src: "{{ nifi_config_dirs.binaries }}/nifi-{{ nifi_version }}-bin.tar.gz"
    dest: "{{ nifi_config_dirs.install }}/"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
    creates: "{{ nifi_config_dirs.install }}/nifi-{{ nifi_version }}"

- name: Fix permissions
  file:
    path: "{{ nifi_config_dirs.install }}/nifi-{{ nifi_version }}"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
    recurse: "yes"

- name: Create NiFi symlink
  file:
    src: "nifi-{{ nifi_version }}"
    path: "{{ nifi_config_dirs.home }}"
    state: "link"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
    follow: no
    force: yes
